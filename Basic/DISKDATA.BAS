100 ' SORTED DIRECTORY TO PRINTER
110 '
120 '     By: A. L. McGarrity
130 '
140 '   Last Modified: 01/31/85
150 '
160 CLEAR 3000
210 CLS
220 DIM N$(68),E$(68),A$(68),Y$(68),R$(68),G(68),B(68),S(68),O(68),W(68),P(68)
230 F1$="%      %  % %  % %  % % ###  ###,###  #,###"
240 F2$="#### ####  %                               %"
250 F3$="%       %               ###  ###,### ##,###"
260 T$="SORTED DIRECTORY TO PRINTER"
270 H1$="FILENAME  EXT  TYP  FMT  GR   --- BYTES ---  NS  ODD"
280 H2$="   --- GRANULE TRACE ---"
290 '
300 ' PROMPT FOR INPUT
310 '
320 PRINT@34,T$: PRINT: PRINT
330 PRINT@135,"NAME OF DISKETTE :"
340 PRINT@194,STRING$(28,"-")
350 PRINT@162,"";
360 LINE INPUT X$
370 PRINT@263,"DATE (MM/DD/YY):"
380 PRINT@331,"--/--/--"
390 PRINT@299,"";
400 LINE INPUT DA$
410 PRINT@391,"TIME (HHMM EST):"
420 PRINT@459,"---- ---"
430 PRINT@427,"";
440 LINE INPUT TI$
450 CLS
460 PRINT@34,T$
470 PRINT@327,"PRINTING HEADINGS"
480 '
490 ' PRINT HEADINGS
500 '
510 GOSUB 1570
520 PRINT#-2,X$;TAB(36);DA$;TAB(69);TI$
530 PRINT#-2,"    ":PRINT#-2,"    "
540 PRINT#-2,H1$;H2$
550 PRINT#-2,TAB(33);"USED   LOST"
560 PRINT#-2,STRING$(76,"-")
570 '
580 ' READ FILE ALLOCATION TABLE
590 '
600 PRINT@320,STRING$(32," ")
610 PRINT@323,"READING TRACK"17" SECTOR"2
620 PRINT@388,"(FILE ALLOCATION TABLE)"
630 DSKI$ 0,17,2,F$,X$
640 '
650 ' READ ALL SECTORS CONTAINING DIRECTORY ENTRIES
660 '
670 FOR S=3 TO 11
680 PRINT@323,"READING TRACK"17" SECTOR"S
690 PRINT@388,"  (DIRECTORY ENTRIES)  "
700 DSKI$ 0,17,S,A$,B$
710 X$=A$+LEFT$(B$,112)
720 GOSUB 750
730 NEXT S
740 GOTO 1120
750 FOR F=1 TO 8: F0=32*F
760 N1$=MID$(X$,F0-31,8) ' FILE NAME
770 IF LEFT$(N1$,1)=CHR$(255) THEN 1120
780 IF LEFT$(N1$,1)=CHR$(0) THEN 920
790 N1=N1+1
800 N$(N1)=N1$
810 E$(N1)=MID$(X$,F0-23,3) ' EXTENSION
820 X=ASC(MID$(X$,F0-20,1)) ' FILE TYPE
830 IF X=0 THEN Y$(N1)="BAS" ELSE IF X=1 THEN Y$(N1)="DAT" ELSE Y$(N1)="M/L"
840 X=ASC(MID$(X$,F0-19,1)) ' FILE FORMAT
850 IF X=0 THEN A$(N1)="BIN" ELSE A$(N1)="ASC"
860 X=ASC(MID$(X$,F0-18,1)) ' FIRST GRANULE
870 IF X>9 THEN R$(N1)=STR$(X) ELSE R$(N1)=" "+STR$(X)
880 Z1=ASC(MID$(X$,F0-17,1))
890 Z2=ASC(MID$(X$,F0-16,1))
900 Z3=256*Z1+Z2
910 GOSUB970
920 NEXT F
930 RETURN
940 '
950 ' SUBROUTINE TO CALCULATE NUMBER OF GRANULES, SECTORS, TOTAL BYTES
960 '
970 G=0
980 G=G+1
990 B=ASC(MID$(F$,X+1,1))
1000 IF B>=70 THEN 1040
1010 X=B
1020 IF X>9 THEN R$(N1)=R$(N1)+STR$(X) ELSE R$(N1)=R$(N1)+" "+STR$(X)
1030 GOTO 980
1040 G(N1)=G
1050 B(N1)=2304*(G-1)+256*(B-193)+Z3 ' TOTAL BYTES
1060 S(N1)=B-192:O(N1)=Z3:W(N1)=2304*G-B(N1)
1070 TG=TG+G
1080 RETURN
1090 '
1100 ' NOW SORT THE FILE NAMES
1110 '
1120 PRINT@323,"SORTING DIRECTORY ENTRIES"
1130 PRINT@384,STRING$(32," ")
1140 M=127
1150 FOR I=1 TO N1
1160 P(I)=I
1170 NEXT I
1180 FOR K=1 TO 6
1190 M=(M-1)/2
1200 IF N1-M-1 < 0 THEN 1360
1210 M1=M+1
1220 I=M1
1230 I1=P(I)
1240 M2=I-M
1250 J=1
1260 J1=M2-J+1: I2=P(J1)
1270 IF N$(I1)>=N$(I2) THEN 1330
1280 P(J1+M)=P(J1)
1290 IF J+M > M2 THEN 1310
1300 J=J+M: GOTO 1260
1310 P(J1)=I1
1320 GOTO 1340
1330 P(J1+M)=I1
1340 IF I+1 > N1 THEN 1360
1350 I=I+1: GOTO 1230
1360 NEXT K
1370 '
1380 ' FINALLY, PRINT THE DIRECTORY ENTRIES
1390 '
1400 PRINT@323,STRING$(28," ")
1410 PRINT@323,"PRINTING DIRECTORY ENTRIES"
1420 FOR K=1 TO N1
1430 I=P(K): J=P(K+D)
1440 PRINT#-2,USING F1$;N$(I);E$(I);Y$(I);A$(I);G(I);B(I);W(I);
1450 PRINT#-2,USING F2$;S(I);O(I);R$(I)
1460 TB=TB+B(I):TW=TW+W(I)
1470 NEXT K
1480 FR=FREE(0)
1490 PRINT#-2,"    "
1500 PRINT#-2,USING F3$;"TOTALS   ";TG;TB;TW
1510 PRINT#-2,"    "
1520 PRINT#-2,USING F3$;"AVAILABLE";FR;2304*FR
1530 END
1540 '
1550 ' SUBROUTINE TO EJECT PAGE (TERMINET 300)
1560 '
1570 FOR UU=1 TO 500:NEXT
1580 PRINT#-2,CHR$(0);CHR$(12);CHR$(0)
1590 FOR UU=1 TO 800:NEXT
1600 FOR UU=1 TO 3
1610 PRINT#-2,"    "
1620 NEXT
1630 RETURN
