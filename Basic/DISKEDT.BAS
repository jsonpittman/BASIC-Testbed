0 'COPYRIGHT 1990 FALSOFT, INC.
10 '
20 '  "DISK EDITOR"
30 '
40 '   BY BILL DANIELS
50 '
60 '  FOR USE BY ANY MODEL COCO       WITH THE 32-COLUMN SCREEN.
70 '
80 CLEAR 1500 'CLEAR AMPLE       STRING SPACE.
90 '
100 DIM A,X,C,D,X$,Y$,Z$,V$,K$,C$,T,S,E 'DIMENSION VARIABLES.
110 K$ = CHR$(128): C$ = CHR$(58): S$ = STRING$(28,32) ' FOR USE BY THE SCREEN.
115 B = 129: C = 256 ' FLAGS NO  SETTING OF TRACKS/SECTORS (FOR  SUBS 400 & 450)
120 CLS 'RESET THE SCREEN
130 PRINT STRING$(10,K$) "disk" K$ "editor" STRING$(11,K$);
140 PRINT "  <1> SET TRACK/SECTOR NUMBERS": PRINT "  <2> EDIT BYTES DISPLAYED": PRINT "  <3> OUTPUT SECTOR TO DISK"
150 PRINT "arrows" K$ "scroll" K$ CHR$(124) K$ "clear" K$ "flips" K$ "mode";
170 POKE 65496,0: EXEC44539: I$ = INKEY$: A = VAL(I$) 'CANCEL     SPEED POKE. HOLD THE SCREEN.    I$ AND 'A' HOLD SELECTION.
180 IF I$ = CHR$(94) THEN 400 '  UP ARROW SELECTED.
190 IF I$ = CHR$(10) THEN 450 '  DOWN ARROW SELECTED.
195 IF I$ = CHR$(12) THEN 230 '  TOGGLE DISPLAY MODE SELECTED.
200 IF A < 1 OR A > 3 THEN 120 ' OPTIONS 1 TO 3 OR INVALID KEY.
210 ON A GOTO 300,500,600
220 '
230 IF F = 0 THEN F = 1 ELSE F = 0 'TOGGLE DISPLAY MODE FLAG.
240 PRINT @ 192, STRING$(128,32)STRING$(128,32) STRING$(63,32); ' CLEAR THE DISPLAY AREA.
250 GOTO 350 'RE-DRAW SCREEN IN  NEW MODE.
260 '
270 ' DISPLAY TRACK & SECTOR
275 ' 
280 PRINT @ 160, "  " S$;: PRINT @ 162, "TRACK" C$ T;:PRINT @ 176, "SECTOR" C$ S;: RETURN
290 '
300 ' DISK SCANNING SUBROUTINE
310 '
315 PRINT @ 160, STRING$(255,32) STRING$(96,32); 'CLEAR WORKING  AREA.
320 PRINT @ 162,"TRACK" C$;: INPUT I$: T = VAL(I$): IF I$ = "" THEN 120 '  INPUT TRACK NUMBER OR NULL TO CANCEL.
330 PRINT @ 176,"SECTOR" C$;: INPUT I$: S = VAL(I$): IF I$ = "" THEN 120 '  INPUT SECTOR NUMBER OR NULL TO  CANCEL.
350 IF S < 1 THEN S = 18: T = T - 1 ELSE IF S > 18 THEN S = 1: T = T + 1 ' ALLOWS SCROLLING TO   THE NEXT TRACK.
355 IF T < 0 THEN T = 0 ELSE IF T > 34 THEN T = 34 ' ERROR TRAP; 40/80 TRACK USERS EDIT TO SUIT.
357 GOSUB 270 ' RE-PRINT TRACK & SECTOR NUMBERS.
360 DSKI$0,T,S,X$,Y$ 'SECTOR IS  ACCESSED FROM DISK. 128 BYTES   AS X$ AND 128 BYTES AS Y$.
365 B = 1: C = 0: D = 0: Z$ = X$: V$ = X$ 'RESET SEGMENT/BYTE    COUNTERS & MAKE V$ & Z$ = THE   FIRST INPUT VARIABLE.
370 POKE 65497,0 'SET FAST SPEED
371 A = INSTR(V$,CHR$(13)): IF A <> 0 THEN MID$(V$,A,1) = " ": GOTO 371 'MAKE ALL CR'S (13) INTO A SPACE TO FORCE DISPLAY TO 2   LINES OF SCREEN.
372 IF F = 0 THEN 700 'GOTO SCAN MODE ROUTINE.
373 PRINT @ 192, S$S$ 'CLEARS 2  LINES OF SCREEN.
374 PRINT @ 192, MID$(V$,B,64);  ' PRINT A 64-BYTE SEGMENT.
375 PRINT @ 288,;: FOR X = C TO C + 7: PRINT LEFT$(STR$(X)+"  ",4);: NEXT X 'PRINT BYTE NUMBERS
380 FOR X = C+1-D TO C+8-D: PRINT LEFT$(STR$(ASC(MID$(Z$,X)))+"  ",4);: NEXT X ' PRINT THE VALUE OF 8 BYTES.
383 A=352: FOR X = C+1-D TO C+8-D: PRINT @ A,"  "+MID$(V$,X,1)+"  ";: A = A + 4: NEXT X 'PRINT   ASCII CHAR. OF 8 BYTES.
385 C = X-1+D 'SET C FOR NEXT 8.
390 PRINT @ 416,;: FOR X = C TO C + 7: PRINT LEFT$(STR$(X)+"  ",4);: NEXT X 'PRINT NEXT 8 NUMS.
395 FOR X = C+1-D TO C+8-D: PRINT LEFT$(STR$(ASC(MID$(Z$,X)))+"  ",4);: NEXT X 'PRINT VALUE  OF  8 MORE BYTES.
396 A = 480: FOR X = C+1-D TO C+7-D: PRINT @ A,"  "+MID$(V$,X,1)+" ";: A = A + 4: NEXT X: PRINT @ A," " MID$(V$,X,1) " ";: X = X + 1 '  PRINT LAST 8 ASCII CHAR. BYTES.
397 C = X-1+D: IF F1 = 1 THEN RETURN ELSE 170 'UPDATE COUNT.     RETURN IF EDIT FLAG SET. ELSE   GOTO MENU.
399 '
400 ' UP ARROW SUB
410 '
420 IF F = 0 OR C = 256 THEN S = S + 1: GOTO 350 ' INCREMENTS TO THE NEXT SECTOR.
425 POKE 65497,0 'SPEED POKE
430 IF C = 128 THEN B = 1: D = 128: Z$ = Y$: V$ = Y$: GOTO 370 ' ADVANCE TO NEXT INPUT VARIABLE.
440 IF C = 64 OR C = 192 THEN B = B + 64: GOTO 370 'DISPLAY NEXT 64-BYTE SEGMENT AND NEXT 16     BYTE VALUES.
445 GOTO 375 'DISPLAY NEXT 16    BYTE VALUES.
450 ' DOWN ARROW SUB
455 '
460 IF F = 0 THEN S = S - 1: GOTO 350 ' DECREMENTS SECTOR SCAN.
465 IF C = 16 THEN C = 240: D = 128: B = 65: S = S - 1: A = 255: IF S < 1 THEN S = 18: T = T - 1: IF T < 0 THEN T = 0 '  SHIFT   DOWN TO NEXT SECTOR. ("A" FLAGS NEXT LINE.)
467 IF A = 255 THEN GOSUB 270: DSKI$0,T,S,X$,Y$: Z$ = Y$: V$ = Y$: GOTO 370 ' PRINT TK & SECTOR  AND GET NEXT SECTOR DOWN.
469 POKE65497,0 ' SPEED POKE
470 IF C = 144 THEN B = 65: C = 112: D = 0: Z$ = X$: V$ = X$: GOTO 370 ' SHIFT DOWN TO IST INPUT VARIABLE.
475 IF C = 80 OR C = 208 THEN B = B - 64: C = C - 32: GOTO 370 ' DOWN BY ONE 64-BYTE SEGMENT.
480 C = C - 32: GOTO 375 'PRINT  NEXT 16 BYTES DOWN.
490 '
500 ' EDIT BYTES SUB
505 '
510 POKE 65496,0: IF F = 0 THEN 650 ELSE PRINT @ 162, S$: PRINT @ 160, "byte" K$ "number" C$;: INPUT I$: A = VAL (I$) ' CANCEL   SPEED POKE. SELECT BYTE.
515 IF I$ = "" OR A < C - 16 OR A => C THEN F1 = 0: GOSUB 270: GOTO 170 ' EXITS EDIT OPTION.
520 PRINT @ 180, "value" C$;: INPUT I$: E = VAL(I$) 'DECIMAL     VALUE OF BYTE.IF E <0 OR E >255 THEN 120
525 IF I$ = "" OR E <0 OR E >255 THEN F1 = 0: GOSUB 270: GOTO 170 ' EXITS EDIT OPTION.
530 MID$(Z$,A+1-D,1) = CHR$(E) ' CHANGE THE BYTE.
540 V$ = Z$: IF C < 129 THEN X$ = Z$ ELSE Y$ = Z$ 'COPY CHANGE   TO I/0 VARIABLES.
550 C = C - 16 'RESET BYTE COUNT
560 F1 = 1: GOSUB 370 'SET FLAG  FOR SUB AT 370 AND RE-DRAW THE  DISPLAY.
570 GOTO 510 'READY TO EDIT NEXT BYTE.
590 '
600 'SUB TO WRITE SECTOR TO DISK
603 '
604 IF X$ = "" THEN 120 ' ERROR  TRAP. NO SECTOR IN MEMORY.
605 PRINT @ 192, STRING$(191,32) STRING$(128,32); 'CLEAR WORKING AREA.
610 PRINT @ 258, "modifying" K$ "disk   SURE? (Y/N)": EXEC44539: I$ = INKEY$: IF I$ <> "Y" THEN 650 ' WARNING MESSAGE.
620 DSKO$0,T,S,X$,Y$ ' SECTOR IS WRITTEN TO DISK.
650 IF F = 0 THEN V$ = Z$ ELSE C = C - 16 ' IF FULL SECTOR MODE  RESET DISPLAY VARIABLE ELSE     RESET THE COUNT IN BYTE MODE.
660 PRINT @ 256, S$: GOTO 370 '  RE-DISPLAY SCREEN.
690 '
700 'SCAN ENTIRE 256-BYTE SECTOR
705 '
710 PRINT @ 192, S$S$S$S$S$S$S$S$; 'CLEAR 8 LINES ON SCREEN.
720 PRINT @ 192, V$; 'PRINT 128  BYTES OF SECTOR.
730 V$ = Y$ 'GET NEXT SEGMENT
740 A = INSTR(V$,CHR$(13)): IF A <> 0 THEN MID$(V$,A,1) = " ": GOTO 740 'REPLACE THE CR'S.
750 PRINT V$;: GOTO 170 'PRINT   LAST 128 BYTES & BACK TO MENU.
