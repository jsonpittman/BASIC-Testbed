0 'COPYRIGHT 1990 FALSOFT, INC.
9 'initialise variables and strings
10 CLEAR500:GOTO1150
20 DIMC(5),A(13),PT(15),PE(15):R=RND(-TIMER):C$=CHR$(8)+CHR$(9)+CHR$(10)+CHR$(94)+"0123456789=+-*/RCP"
30 C(1)=61:C(2)=43:C(3)=45:C(4)=42:C(5)=47:T1$="L9T25V1O3C":T2$="L10T10V9O1GO2GO3GO4GO5GO4GO3GO2GO1G"
40 FORI=1TO7:N$=N$+CHR$(159)+CHR$(239):NEXTI:N1$=CHR$(239)+N$:N2$=N$+CHR$(159)
50 FORI=1024TO1534STEP2:N=RND(5):R=RND(10):POKEI,47+R:POKEI+1,C(N):NEXTI
60 PRINT@140,"EQUALITY";:PRINT@236,"SCRABBLE";:PRINT@110,"N";:PRINT@174,"M";:PRINT@206,"E";:PRINT@270,"I";:PRINT@302,"C";:PRINT@334,"A";:PRINT@272,"Y";:PRINT@362,"R.DELBOURGO";
70 PLAY"L8CCL4FFL8FL4AL12GP12FGP12AL4F"
80 PRINT@481,STRING$(5,"=")"INSTRUCTIONS <Y/N> ?"STRING$(5,"=");
90 I$=INKEY$:IFI$="N"THEN200ELSEIFI$="Y"THEN100ELSE90
99 'instructions
100 CLS:GOSUB1130:GOSUB1140
110 PRINT"THIS BOARD GAME (FOR UP TO FOUR PLAYERS) IS A NUMERIC VERSION OFSCRABBLE. EVERY PLAYER IS DEALT 6 INTEGERS (0-9) AND 5 OPERATORS(=,+,-,*,/) AT RANDOM WHICH ARE USED TO BUILD VALID SUMS ALONG  A HORIZONTAL or VERTICAL LINE."
120 GOSUB1140:PRINT"THE BOARD IS 15X15 AND INTEGERS MUST BE LAID ON "CHR$(239)",OPERATORS ON "CHR$(159);
130 PRINT"ALL SUMS MUST BE SEPARATED BY "CHR$(239)" AND/OR "CHR$(159)", CAN ONLY CONTAIN one =BUT ANY # OF INTEGERS/OPERATORS.";
140 GOSUB1110
150 CLS:GOSUB1130:GOSUB1140
160 PRINT"THE ORDER OF OPERATIONS IS FIXEDTO BE: DIVISION, MULTIPLICATION,SUBTRACTION AND THEN ADDITION."
170 GOSUB1140:PRINT"FOR EACH PIECE PLAYED SCORING IS #:VALUE OF DIGIT                =:1    +:3    -:5    *:7    /:9";
180 GOSUB1140:PRINT"YOU INSERT YOUR PIECES BY TYPINGTHE APPROPRIATE CHARACTER.  WHENFINISHED <P> PASSES PLAY TO NEXTPLAYER. <R> TO RETRACT INCORRECTENTRY, <C> TO CHANGE all PIECES.";
190 GOSUB1110
199 'determine # players and initialise remaining quantities
200 CLSRND(7)+1:GOSUB1130
210 PRINT@64,"HOW MANY PLAYERS (4 MAX.)";:INPUTNP:NP=INT(NP):IFNP<1ORNP>4THENSOUND200,2:GOTO210
220 DIMP$(NP),SC(NP),NN$(NP),OO$(NP):RM=24/NP
230 FORI=1TONP:PRINT@64*(I+1),"PLAYER #"I"YOUR NAME";:INPUTP$(I):IFLEN(P$(I))>8THENP$(I)=LEFT$(P$(I),8)
240 NEXTI
250 CLS:FORI=0TO15:POKE1504+I,175:POKE1039+32*I,175:POKE1072+I,175:POKE1232+I,175:POKE1296+I,175:NEXTI:POKE1048,175
260 FORI=0TO96STEP32:POKE1112+I,175:NEXTI:FORI=1TONP:SC(I)=0:NN$(I)="":OO$(I)="":NEXTI:RD=0:X=7:Y=7
270 FORI=0TO448STEP64:PRINT@I,N1$;:NEXTI:FORI=32TO416STEP64:PRINT@I,N2$;:NEXTI
280 PRINT@17,"PLAYER";:PRINT@26,"SCORE";:FORI=1TONP:PRINT@48+32*I,P$(I);:NEXTI
290 PRINT@304,"move cursor with";:PRINT@336,"the arrow keys.";:PRINT@368,"type character";:PRINT@400,"to insert piece,";:PRINT@432,"<R> to retract";:PRINT@464,"<C> to change,";:PRINT@496,"<P> to pass.";
299 'deal pieces to each player, 6 numbers, 3 operators and 2 =
300 FORI=1TONP:FORJ=1TO6:NN$(I)=NN$(I)+CHR$(47+RND(10)):NEXTJ:FORJ=1TO3:OO$(I)=OO$(I)+CHR$(C(RND(4)+1)):NEXTJ:OO$(I)=OO$(I)+"==":NEXTI
309 'start game
310 P=0:RD=RD+1:IFRD=RM THEN370
319 'show hand and wait for keypress
320 Q=1:T$="":S$="":P=P+1:IFP=NP+1THEN310
330 PRINT@240,CHR$(229)+NN$(P)+CHR$(234)+CHR$(149)+OO$(P)+CHR$(154)+CHR$(175);
340 I$=INKEY$:GOSUB780:IFI$=""THEN340
350 ONINSTR(1,C$,I$) GOTO390,410,430,450,470,470,470,470,470,470,470,470,470,470,490,490,490,490,490,510,560,600
360 GOSUB780:GOTO340
370 PRINT@483,"GAME OVER!";:PLAYT2$:PRINT@17,"<S> TO RESTART"
380 IFINKEY$<>"S"THENPRINT@17,"<s> to restart";:GOTO370ELSE250
390 X=X-1:IFX<0THENX=0 'left
400 GOTO340
410 X=X+1:IFX>14THENX=14 'right
420 GOTO340
430 Y=Y+1:IFY>14THENY=14 'down
440 GOTO340
450 Y=Y-1:IFY<0THENY=0 'up
460 GOTO340
469 'number insertion
470 I=INSTR(1,NN$(P),I$):IFI=0ORPEEK(1024+X+32*Y)<>239THENSOUND100,1:GOTO340
480 GOSUB790:GOTO330
489 'operator insertion
490 I=INSTR(1,OO$(P),I$):IFI=0ORPEEK(1024+X+32*Y)<>159THENSOUND100,1:GOTO340
500 GOSUB820:GOTO330
509 'retraction routine
510 IFQ=1THENSOUND100,1:GOTO340
520 FORI=1TOQ-1:POKEPT(I),PE(I):NEXTI 'restore board
530 NN$(P)=NN$(P)+S$:S$="" 'readjust strings
540 OO$(P)=OO$(P)+T$:T$=""
550 Q=1:GOTO330
559 'change routine
560 IFQ>1THENSOUND100,1:GOTO330 ELSENN$(P)="":OO$(P)=""
570 FORJ=1TO6:NN$(P)=NN$(P)+CHR$(47+RND(10)):NEXTJ
580 FORJ=1TO4:OO$(P)=OO$(P)+CHR$(C(RND(4)+1)):NEXTJ:OO$(P)=OO$(P)+"="
590 PRINT@58+32*P,USING"####";SC(P):PLAYT2$+T2$+T2$+T2$:GOTO320
600 SC=0:IFQ=2THEN770
609 'pass routine
610 PRINT@484,"CHECKING";:D=PT(2)-PT(1):IFABS(D)>15THEND=32ELSED=1
620 FORII=2TOQ-1:IFD=1ANDABS(PT(II)-PT(1))>15THEN770 'check if horizontal
630 IFD=32ANDPT(II)-PT(1)<>32*INT((PT(II)-PT(1))/32)THEN770 'check if vertical
640 NEXTII
649 'determine string along line of play
650 L$="":IFD=1THENP1=32*INT(PT(1)/32):FORI=P1 TOP1+14:L$=L$+CHR$(PEEK(I)-64):NEXTI 'along horizontal
660 IFD=32THENP1=1024+PT(1)-32*INT(PT(1)/32):FORI=P1 TOP1+448STEP32:L$=L$+CHR$(PEEK(I)-64):NEXTI 'along vertical
670 L=LEN(L$)
679 'break up into substrings for analysis
680 FORK=1TOL:IFMID$(L$,K,1)=CHR$(95)ORMID$(L$,K,1)=CHR$(175)THENNEXTK
690 L$=RIGHT$(L$,L-K+1):L=L-K+1
700 FORJJ=1TOL:IFMID$(L$,JJ,1)=CHR$(95)ORMID$(L$,JJ,1)=CHR$(175)THEN710ELSENEXTJJ
709 'get substring
710 SS$=LEFT$(L$,JJ-1):SS=LEN(SS$):IFSS>1THENGOSUB850:IFKK=1THEN770
720 IFL<JJ THEN730ELSEL$=RIGHT$(L$,L-JJ+1):L=L-JJ+1:GOTO680
730 FORTT=1TOLEN(S$+T$):TT$=MID$(S$+T$,TT,1):SC=SC+INSTR(1,"123456789",TT$)+INSTR(1,"= + - * /",TT$):NEXTTT
740 SC(P)=SC(P)+SC:PRINT@58+32*P,USING"####";SC(P):PRINT@484,STRING$(8,175);
750 PLAYT2$+T2$+T2$+T2$:IFLEN(S$)>0THENFORJ=1TOLEN(S$):NN$(P)=NN$(P)+CHR$(47+RND(10)):NEXTJ
755 IFLEN(T$)>0THENFORJ=1TOLEN(T$):OO$(P)=OO$(P)+CHR$(C(RND(4)+1)):NEXTJ
760 GOTO320
770 PRINT@484,"INVALID!";:SOUND10,20:PRINT@484,STRING$(8,175);:GOTO520
780 PT=1024+X+32*Y:PP=1080+32*P:PE=PEEK(PT):POKEPT,PE:POKEPT,191:POKEPP,175:POKEPP,207:PLAYT1$:POKEPP,175:PT(Q)=PT:PE(Q)=PE:POKEPT,PE:RETURN
789 'readjust number string
790 NN=LEN(NN$(P)):NN$(P)=LEFT$(NN$(P),I-1)+RIGHT$(NN$(P),NN-I)
800 S$=S$+I$:PRINT@X+32*Y,I$;:Q=Q+1
810 PLAYT2$:RETURN
819 'readjust operator string
820 OO=LEN(OO$(P)):OO$(P)=LEFT$(OO$(P),I-1)+RIGHT$(OO$(P),OO-I)
830 T$=T$+I$:PRINT@X+32*Y,I$;:Q=Q+1
840 PLAYT2$:RETURN
850 KK=0:FORI=1TO13:A(I)=0:NEXTI:IFSS=2*INT(SS/2)THENKK=1:RETURN 'valid string must be odd
860 FORI=1TOSS STEP2:N$=MID$(SS$,I,1):IFN$<"0"ORN$>"9"THENKK=1:RETURN 'test number sequence
870 FORI=2TOSS STEP2:O$=MID$(SS$,I,1):IFO$="/"ORO$="*"ORO$="-"ORO$="+"ORO$="="THENNEXTI ELSEKK=1:RETURN 'test operator sequence
880 E=0:FORI=2TOSS STEP2:IFMID$(SS$,I,1)="="THENE=E+1 'test # equal signs in substring
890 NEXTI:IFE=0ORE>1THENKK=1:RETURN
900 FORI=2TOSS STEP2:IFMID$(SS$,I,1)<>"="THENNEXTI ELSEE=I
910 LL$=LEFT$(SS$,E-1):RR$=RIGHT$(SS$,SS-E) 'split substrings on either side of = sign
920 A$=LL$:GOSUB950:LL=A:A$=RR$:GOSUB950:RR=A
930 IFABS(LL-RR)>.000001THENKK=1
940 RETURN
949 'carry out the sums on the strings
950 N=(LEN(A$)+1)/2:O=N-1
960 FORI=1TON:A(I)=VAL(MID$(A$,2*I-1,1)):NEXTI
970 O$="":FORI=1TOO:O$=O$+MID$(A$,2*I,1):NEXTI
979 'division first
980 DI=INSTR(1,O$,"/"):IFDI=0THEN1010
990 A(DI)=A(DI)/A(DI+1):FORI=DI+1TON:A(I)=A(I+1):NEXTI
1000 O$=LEFT$(O$,DI-1)+RIGHT$(O$,O-DI):N=N-1:O=O-1:GOTO980
1009 'then multiplication
1010 MU=INSTR(1,O$,"*"):IFMU=0THEN1040
1020 A(MU)=A(MU)*A(MU+1):FORI=MU+1TON:A(I)=A(I+1):NEXTI
1030 O$=LEFT$(O$,MU-1)+RIGHT$(O$,O-MU):N=N-1:O=O-1:GOTO980
1039 'then subtraction
1040 SU=INSTR(1,O$,"-"):IFSU=0THEN1070
1050 A(SU)=A(SU)-A(SU+1):FORI=SU+1TON:A(I)=A(I+1):NEXTI
1060 O$=LEFT$(O$,SU-1)+RIGHT$(O$,O-SU):N=N-1:O=O-1:GOTO1040
1069 'then addition
1070 AD=INSTR(1,O$,"+"):IFAD=0THEN1100
1080 A(AD)=A(AD)+A(AD+1):FORI=AD+1TON:A(I)=A(I+1):NEXTI
1090 O$=LEFT$(O$,AD-1)+RIGHT$(O$,O-AD):N=N-1:O=O-1:GOTO1070
1099 'the final result of the sum
1100 A=A(1):RETURN
1110 PRINT@481,STRING$(9,"=");"type any key"STRING$(9,"=");
1120 IFINKEY$=""THEN1120ELSERETURN
1130 PRINTSTRING$(12,"=")"equality"STRING$(12,"=");:RETURN
1140 PRINTSTRING$(32,"=");:RETURN
1150 PCLEAR2:GOTO20
