1 'DISK DEFRAGMENTOR
2 'BY NICK JOHNSON
3 'COPYRIGHT (C) 1992
4 'BY FALSOFT, INC
5 'RAINBOW MAGAZINE
10 VERIFYON
20 IF PEEK(&HFFFF)=27 THEN WD=PEEK(&HE7):EXEC &HF652:POKE 65502,0
30 PCLEAR 1
40 DV=PEEK(&H95A)
50 CLEAR 20000:DIM F1$(68):DIM A$(10):DIM B$(10):DIM G(72)
60 CLS
70 PRINT"  -=> COCO DISK DEFRAGMENT <=-"
80 PRINT"  -=>   BY NICK JOHNSON    <=-"
90 PRINT:PRINT
100 PRINTTAB(6)"bEGIN DEFRAGMENTATION"
110 PRINT
120 PRINTTAB(6)"dISPLAY GRANULE TABLE"
130 PRINT
140 PRINTTAB(6)"qUIT"
150 PRINT@100,STRING$(25,207):PRINT@292,STRING$(25,207)
160 FOR X=4 TO 8:PRINT@(X*32)+4,CHR$(207);:PRINT@(X*32)+28,CHR$(207);:NEXT X
170 PRINT@384
180 A$=INKEY$:IF A$="" THEN 180
190 IF INSTR("BDQ",A$)=0 THEN 180
200 IF A$="B" THEN 220 ELSE IF A$="D" THEN 1200 ELSE IF A$="Q" THEN 210
210 GOSUB 1810:CLEAR 200,32768:IF PEEK(&HFFFF)=27 THEN POKE 65503,0:POKE &HE7,WD:END
220 CLS
230 A$="DEFRAGMENTATION"
240 GOSUB 1350
250 PRINT"INSERT A BLANK, FORMATTED DISK  IN DRIVE 1."
260 PRINT:PRINT"INSERT THE FRAGMENTED DISK IN   DRIVE 0."
270 PRINT:PRINT"PRESS [ENTER] WHEN READY."
280 IF INKEY$<>CHR$(13) THEN 280
290 CLS
300 A$="DEFRAGMENTATION IN PROGRESS"
310 GOSUB 1350
320 PRINT:FAT$=""
330 PRINTTAB(5)"PRESS [ENTER] TO ABORT."
340 PRINT@160,"FILENAME"
350 PRINT@192,"CURRENT OP:"
360 PRINT@224,"TRACK, SECTOR"
370 PRINT@256,"GRANULE"
380 PRINT@288,"DRIVE"
390 PRINT
400 F$="":OP$="READING DIRECTORY":T=-1:S=-1:G=-1:D=0
410 GOSUB 1480
420 'READ THE DIRECTORY.
430 GOSUB 1810
440 FOR I=3 TO 11
450 DSKI$0,17,I,A$(I-1),B$(I-1)
460 S=1:T=17:GOSUB 1480
470 NEXT I
480 GOSUB 1790
490 OP$="PROCESSING DIR":T=-1:D=-1:GOSUB 1480
500 P=2
510 N=1:O=1
520 IF (N-1)*32>=128 THEN 570 ELSE Q$=MID$(A$(P),(N-1)*32+1,32)
530 IF ASC(Q$)=0 THEN N=N+1:GOTO 520
540 IF ASC(A$(P))=255 OR ASC(Q$)=255 THEN 650
550 F1$(O)=Q$
560 IF (N-1)*32>=128 THEN 570 ELSE N=N+1:O=O+1:GOTO 520
570 N=1
580 IF (N-1)*32>=128 THEN 630 ELSEQ$=MID$(B$(P),(N-1)*32+1,32)
590 IF ASC(Q$)=0 THEN N=N+1:GOTO 580
600 IF ASC(B$(P))=255 OR ASC(Q$)=255 THEN 650
610 F1$=(O)=Q$
620 IF (N-1)*32>=128 THEN 630 ELSE N=N+1:O=O+1:GOTO 580
630 P=P+1:IF P>11 THEN 650
640 N=1:GOTO 520
650 '
660 O=O-1 'O IS # OF FILES
670 OP$="READING FAT"
680 T=17:S=2:D=0
690 GOSUB 1480
700 GOSUB1810:DSKI$0,17,2,A$(1),B$(1)
710 GOSUB1790:GR=0 'LAST AVAILABLE GRN ON NEW DISK
720 FOR K=1 TO O 'OUTER LOOP
730 IF INKEY$=CHR$(13) THEN 50
740 F$=LEFT$(F1$(K),11)
750 OP$="ANALYZING FILE":T=-1:D=-1:G=-1:GOSUB 1480
760 FG=ASC(MID$(F1$(K),14,1)):EG=FG '1ST GRAN
770 LB=ASC(MID$(F1$(K),15,1))*256+ASC(MID$(F1$),16,1))
780 G(K)=GR
790 OP$="GRABBING GRANULE"
800 D=0:G=EG:GOSUB 1550
810 OP$="WRITING GRANULE."
820 D=1:G=GR:GOSUB 1680
830 OP$="CHECKING NEXT GR":D=-1:T=-1:S=-1:G=-1:GOSUB 1480
840 NG=ASC(MID$(A$(1),EG+1,1))
850 IF NG>=192 THEN 930
860 EG=NG:GR=GR+1
870 OP$="UPDATING FAT":D=1:T=17:S=2:G=-1:GOSUB 1480
880 FAT$=FAT$+CHR$(GR)
890 GOSUB 1810
900 DSKO$1,17,2,FAT$,""
910 GOSUB 1790
920 GOTO 790
930 OP$="UPDATING FAT":D=1:T=17:S=2:G=-1:GOSUB 1480
940 FAT$=FAT$+CHR$(NG):GR=GR+1
950 GOSUB 1810
960 DSKO$1,17,2,FAT$,""
970 GOSUB 1790
980 NEXT K
990 OP$="UPDATING DIR":D=1:G=-1
1000 '
1010 FI=1:FOR MS=2 TO 10
1020 FOR I=14 TO 128 STEP 32
1030 MID$(A$(MS),I,1)=CHR$(G(FI))
1040 FI=FI+1
1050 NEXT I
1060 FOR I=14 TO 128 STEP 32
1070 MID$(B$(MS),I,1)=CHR$(G(FI))
1080 FI=FI+1
1090 NEXT I:NEXT MS
1100 FAT$=FAT$+STRING$(68-LEN(FAT$),255)
1110 T=17:S=2:F$=""
1120 GOSUB 1480
1130 GOSUB 1810:DSKO$1,17,2,FAT$,"":GOSUB 1790
1140 FOR I=3 TO 11
1150 GOSUB 1810
1160 DSKO$1,17,I,A$(I-1),B$(I-1)
1170 GOSUB 1790
1180 NEXT I
1190 GOTO 50
1200 CLS
1210 FC=0
1220 A$="GRANULE TABLE: "
1230 GOSUB 1350
1240 GOSUB 1810
1250 DSKI$ DV,17,2,A$,B$
1260 GOSUB 1790
1270 PRINTSTRING$(32,"-");
1280 FOR X=1 TO 68
1290 PRINT USING" %% ":HEX$(ASC(MID$(A$,X,1)));
1300 IF ASC(MID$(A$,X,1))=255 THEN FC=FC+1
1310 NEXT X
1320 PRINT:PRINT"  FREE:"FC:PRINTSTRING$(32,"-");
1330 PRINT"PRESS ANY KEY."
1340 IF INKEY$>"" THEN 60 ELSE 1340
1350 X1=0:X2=31
1360 A=LEN(A$)
1370 B=FIX(A/2)
1380 B$=LEFT$(A$,B)
1390 C$=(MID$(A$,B+1,A-B+1))
1400 X2=X2-LEN(C$)
1410 IF X1>=1 THEN PRINT@X1-1,"";
1420 PRINT@X1,B$;
1430 PRINT@X2,C$
1440 X2=X2-1
1450 X1=X1+1
1460 IF X2=X1+(B-2) THEN 1470 ELSE 1410
1470 PRINT@32,"";:RETURN
1480 '
1490 PRINT@171, USING"%%";F$;
1500 PRINT@204, USING"%                %";OP$
1510 PRINT@238,"";:IF T=-1 OR S=-1 THEN PRINT"      ";:GOTO 1520 ELSE PRINT USING"## ##";T,S;
1520 PRINT@264,"";:IF G=-1 THEN PRINT"   ";:GOTO 1530 ELSE PRINTG;
1530 PRINT@293,"";:IF D=-1 THEN PRINT"    ";:GOTO1540 ELSE PRINTD;
1540 RETURN
1550 '
1560 ST=FIX(G/2)
1570 IF G>33 THEN ST=ST+1
1580 IF G/2=FIX(G/2) THEN SS=1:M=0  ELSE SS=10:M=9
1590 ES=SS+8
1600 FOR Z=SS TO ES
1610 S=Z:T=ST:GOSUB 1480
1620 GOSUB 1810
1630 DSKI$D,ST,Z,C$(Z-M),D$(Z-M)
1640 GOSUB 1790
1650 NEXT Z
1660 RETURN
1670 '
1680 ST=FIX(G/2)
1690 IF G>33 THEN ST=ST+1
1700 IF G/2=FIX(G/2) THEN SS=1:M=0 ELSE SS=10:M=9
1710 ES=SS+8
1720 FOR Z=SS TO ES
1730 S=Z:T=ST:GOSUB 1480
1740 GOSUB 1810
1750 DSKO$D,ST,Z,C$(Z-M),D$(Z-M)
1760 GOSUB 1790
1770 NEXT Z
1780 RETURN
1790 IF PEEK(&HFFFF)=27 THEN POKE 65497,0 ELSE POKE 65495,0
1800 RETURN
1810 IF PEEK(&HFFFF)=27 THEN POKE 65496,0 ELSE POKE 65494,0
1820 RETURN
