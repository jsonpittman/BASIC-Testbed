10 DATA 82,69,65,68,89,13,0,246,3,254,32,3,0,46,0,193,191,39,8,198,191,247,3,254,247,3,255,177,3,255,39,5,182,3,255,32,2,134,96,32,57,0
15 F=PEEK(41299):L=PEEK(41301)
20 FORA=41287 TO 41328
30 READX:POKEA,X:NEXTA
40 ' Jump to NEWBLINK routin
50 POKE&HA1A5,126
60 POKE&HA1A6,&HA1
70 POKE&HA1A7,&H4E
80 'Tell basic were 'READY' is.
90 POKE44151,161:POKE44152,70
100 'Pauses basic program with F4
110 POKE44533,4
120 'Allows 255 chracters on line
130 POKE41954,255
140 'Change BREAK IN to BREAK AT
150 POKE44009,65:POKE44010,84
155 POKE41299,F:POKE41301,L'RESET VERSION AND RELEASE NUMBERS
160 CLS:EXEC49152
10 '     PROGRAM "NUMBER"
20 '        WRITTEN BY
30 '    RICHARD F. PURNELL
40 '      COPYRIGHT (C)
50 '         5/5/87
60 CLS:O$="000000"
70 A$(1)="DECIMAL":A$(2)="HEXADEC"
80 A$(3)="OCTAL":A$(4)="BINARY"
90 PRINTA$(1);"(1)":PRINTA$(2);"(2)":PRINTA$(3);"  (3)":PRINTA$(4);" (4)"
100 INPUT"INPUT ";A
110 INPUT"OUTPUT";B
120 IFA=1ANDB=4THENC$="  0-255"
130 IFA=1ANDB=2THENC$="  0-65535"
140 IFA=1ANDB=3THENC$="  0-4095"
150 IFA=2ANDB=1THENC$="  0000-FFFF"
160 IFA=2ANDB=3THENC$="  0000-0FFF"
170 IFA=2ANDB=4THENC$="  0000-00FF"
180 IFA=3ANDB=1THENC$="  0000-7777"
190 IFA=3ANDB=2THENC$="  0000-7777"
200 IFA=3ANDB=4THENC$="  0000-3777"
210 CLS:PRINT"   ";A$(A),A$(B):PRINTC$
220 PRINT@97,"";:LINEINPUT" ";Y$:N=VAL(Y$)
230 ON A GOTO240,390,400,470
240 ON B GOTO250,270,290,350
250 PRINT@97,"        ";:PRINT@112,N$;:IFB=1THENPRINTN
260 GOTO220
270 N$=RIGHT$("000"+HEX$(N),4)
280 GOTO250
290 N$="":FORX=0TO3
300 S=INT(2^(9-3*X))
310 D=INT(N/S)
320 N=N-D*S
330 N$=N$+CHR$(D+48)
340 NEXT:GOTO250
350 N$="":FORX=0TO7:N$(X)="0"
360 IFN=>INT(2^(7-X))THENN$(X)="1":N=N-INT(2^(7-X))
370 N$=N$+N$(X)
380 NEXT:GOTO250
390 T=12:U=4:GOTO410
400 T=9:U=3
410 N=0:FORX=0TO3
420 Z=ASC(RIGHT$(Y$,4-X))
430 D=Z-48
440 IFZ>60THEND=Z-55
450 N=N+D*2^(T-U*X)
460 NEXT:GOTO240
470 N=0:Y$=O$+Y$:FORX=0TO7
480 IFLEFT$(RIGHT$(Y$,8-X),1)="1"THENN=N+2^(7-X)
490 NEXT:GOTO240
10 REM"CONVERTING INCHES TO FEET AND YARDS"
20 REM"STEVE BLYN,COMPUTER ISLAND,STATEN ISLAND,NY,1988
30 CLS5:C=36+RND(200)
40 A=RND(5):IF A=1 THEN A$="RANDY" ELSE IF A=2 THEN A$="JUAN" ELSE IF A=3 THEN A$="FRED" ELSE IF A=4 THEN A$="CHER" ELSE A$="MARIE"
50 B=RND(5):IF B=1 THEN B$="CLOTH" ELSE IF B=2 THEN B$="WOOD" ELSE IF B=3 THEN B$="ROPE" ELSE IF B=4 THEN B$="TRIMMING" ELSE B$="WIRE"
60 PRINTA$" IS DOING A SCHOOL PROJECT"
70 PRINT"WHICH REQUIRES EXACTLY";C
80 PRINT"INCHES OF "B$"."
90 PRINT@160,"":PRINT@128,"HOW MANY YARDS ARE CONTAINED IN"C"INCHES";
100 INPUT X
110 XX=INT(C/36):IF X<1 OR X>9 THEN 90
120 IF X=XX THEN PRINT@175,"  CORRECT":PLAY"L200CDEFGGG" 
130 IF X<>XX THEN PRINT@174,"SORRY,"XX"IS RIGHT.";:PLAY"L4D"
140 FT=C-(XX*36)
150 IF XX=1 THEN Y$="YARD" ELSE Y$="YARDS"
160 PRINT@192,C"-"XX;Y$" LEAVES"FT"INCHES"
170 PRINT C"-"XX*36"="FT"INCHES"
180 PRINT@320,"":PRINT@288,"HOW MANY FEET ARE CONTAINED IN "FT"INCHES";
190 INPUT Y
200 IF Y>2 OR Y<0 THEN 180
210 YY=INT(FT/12)
220 IF Y=YY THEN PRINT@335,"  CORRECT":PLAY"L200CDEFGGG"
230 IF Y<>YY THEN PRINT@334,"SORRY,"YY"IS RIGHT.";:PLAY"L4D"
240 LT=FT-(YY*12):IF YY=1 THEN F$="FOOT" ELSE F$="FEET"
250 IF LT=1 THEN N$="INCH" ELSE N$="INCHES"
260 PRINT@352,FT"-"YY;F$;" LEAVES"LT;N$
270 PRINT FT"-"YY*12"="LT;N$
280 PRINT@448,C"IN.="XX;"YD.,"YY"FT.&"LT"IN."
290 EN$=INKEY$
300 IF EN$=CHR$(13) THEN RUN ELSE IF EN$="E" THEN 310 ELSE 290
310 CLS:END
10 ' BASIC STATEMENT CONVERTER
20 ' WRITTEN BY LARRY BOELDT FOR
30 ' RAINBOW MAGAZINE BASICALLY
40 ' SPEAKING COLUMN.
50 ' COPYRIGHT (C) 1989
60 '
65 CLEAR 14000:DIM L$(500)
70 INPUT"ENTER THE PROGRAM NAME";F$
80 OPEN"D",#1,F$,1
90 FIELD #1,1 AS A$
100 X=0:B=1
110 GET #1,B:B=B+1
120 IF B=LOF(1) THEN CLOSE:GOTO200
130 IF A$=CHR$(13) THEN 150
140 L$(X)=L$(X)+A$:GOTO 110
150 X=X+1:GOTO 110
160 '
200 FOR R=1 TO X:A$=L$(R):OF=1
210 LS=LEN(A$):IF LS>240 THEN PRINT"LINE ";LEFT$(A$,INSTR(A$," "));" IS TOO LONG":GOTO 300
220 OF=INSTR(OF,A$,"PRINT")
230 IF OF=0 THEN 300
240 OF=OF+4:A$=LEFT$(A$,OF)+"#-2,"+RIGHT$(A$,LS-OF)
260 GOTO 210
300 L$(R)=A$:NEXT R
310 OPEN"O",#1,F$
320 FOR R=1 TO X
330 PRINT #1,L$(R)
340 NEXT R
350 CLOSE #1
0 ' COPYRIGHT 1989  FALSOFT,INC
1 CLS:PRINT"THE BASE CONVERTER"
2 PRINT:INPUT"WHAT IS THE NUMBER YOU NEED     CONVERTED";I$:IFI$=""THEN2
3 INPUT"WHAT BASE IS THIS NUMBER        IN";B:FORX=1TOLEN(I$):IFB=<10ANDVAL(MID$(I$,X,1))=>B THENPRINT"IMPOSSIBLE IN GIVEN BASE.":GOTO3ELSENEXT
4 FORX=1TOLEN(I$):FORY=65TO90:IFASC(MID$(I$,X,1))=Y ANDB<=10THENPRINT"IMPOSSIBLE IN GIVEN BASE.":GOTO1ELSENEXT
5 INPUT"TO WHAT BASE DO YOU WANT THIS   CONVERTED";B1:IFB1=B THENPRINT"YOUR TWO BASES ARE THE SAME.":GOTO5ELSEIFB1<2THENPRINT"THE BASE IS TOO LOW.":GOTO5
7 CLS:PRINT"NUMBER:";I$:PRINT"BASE";B:PRINT"CONVERT TO BASE";B1:PRINT"***********----------***********THE ANSWER IS:";
8 IFB>10ORB1>10THEN1000ELSEIFB<10THEN100
10 REM *** CONVERT TO B1 ***
11 FORX=1TOLEN(I$):N(X)=0:NEXT:G=0:A=0:X=0
12 A=VAL(I$):IFA<B1 THENX=X+1:N(X)=A:GOTO14
13 C=INT(A/B1):X=X+1:N(X)=A-(C*B1):I$=STR$(C):GOTO12
14 FORY=X TO1STEP-1:A$=A$+STR$(N(Y)):NEXTY
15 FORY=1TOLEN(A$):IFMID$(A$,Y,1)=" "THENNEXTELSEPRINTMID$(A$,Y,1);:NEXT
16 END
100 REM *** CONVERT TO 10 ***
101 FORX=1TOLEN(I$):N(X)=VAL(MID$(I$,X,1)):NEXT
102 G=LEN(I$):FORX=1TO LEN(I$):G=G-1:A=A+N(X)*(B^G):NEXT
103 IFB1=10 THENPRINTA:END
104 I$=STR$(A):GOTO10
1000 REM *** OVER 10 CONVERT ***
1001 FORX=1TOLEN(I$):N$(X)=MID$(I$,X,1):NEXT:FORX=1TOLEN(I$):FORY=65TO90:IFN$(X)=CHR$(Y) THENN$(X)=STR$(Y-55):NEXTY,X
1002 NEXTY,X:M=LEN(I$):FORX=1TOLEN(I$):M=M-1:S=VAL(N$(X))*(B^M):N$(X)=STR$(S):S=0:NEXT
1003 FORX=1TOLEN(I$):A=A+VAL(N$(X)):NEXT
1005 IFB1=10THEN103
1006 IFB1<10THENI$=STR$(A):GOTO10
1010 REM *** CONVERT TO B1 ***
1011 FORX=1TOLEN(V$):N(X)=0:N$(X)="":NEXT:V$=STR$(A):I$=V$
1012 P=VAL(I$):IFP<B1 THENJ=J+1:N(J)=P:GOTO1014
1013 C=INT(P/B1):J=J+1:N(J)=P-(C*B1):I$=STR$(C):GOTO1012
1014 FORY=J TO1STEP-1:IFN(Y)>9THENG$=G$+CHR$(N(Y)+55):NEXTELSEG$=G$+STR$(N(Y)):NEXT
1015 FORX=1TOLEN(G$):IFMID$(G$,X,1)=" "THENNEXTELSEPRINTMID$(G$,X,1);:NEXT
1016 END
1 'PRINT@ CONVERTER
2 'BY MIKE WOOLRIDGE
3 'COPYRIGHT (C) 1992
4 'BY FALSOFT, INC.
5 'RAINBOW MAGAZINE
10 CLEAR 5000
20 ON ERR GOTO 820
30 AA=40
40 DIM PS(11)
50 DIM PE(11)
60 DIM PN(11)
70 DIM RP$(11)
80 CLS
90 LINE INPUT "FILE TO BE CONVERTED...";A$
100 PRINT
110 LINE INPUT "NAME OF CONVERTED FILE...";B$
120 PRINT
130 PRINT"CONVERT PRINT@ STATEMENTS TO:"
140 PRINT"        1. 40 COLUMN SCREEN"
150 PRINT"        2. 80 COLUMN SCREEN"
160 INPUT A:IF A<1 OR A>2 THEN CLS:GOTO 130
170 IF A=1 THEN AA=40 ELSE AA=80
180 WIDTH AA
190 PRINT "CONVERTING FILE ";A$
200 PRINT
210 PRINT "TO FILE ";B$
220 PRINT
230 PRINT "FOR SCREEN SIZE OF";AA
240 PRINT
250 PRINT "PLEASE WAIT..."
260 OPEN "I",#1,A$
270 OPEN "O",#2,B$
280 LINE INPUT#1,IP$
290 IF EOF(1)=-1 THEN CLOSE#1:QP=-1
300 TG$="PRINT@"
310 PS(1)=INSTR(1,IP$,TG$)
320 IF PS(1)=0 THEN PRINT#2,IP$ ELSE GOTO 340
330 IF QP=-1 THEN 590 ELSE GOTO 280
340 FOR X=2 TO 10
350 PS(X)=INSTR(PS(X-1)+1,IP$,TG$)
360 IF PS(X)=0 THEN GOTO 380
370 NEXT X
380 FOR Z=1 TO X-1
390 FOR V=PS(Z)+5 TO PS(Z)+10
400 CC$=MID$(IP$,V,1)
410 IF CC$="@" THEN C=V
420 IF CC$="," THEN PE(Z)=V:PN(Z)=VAL(MID$(IP$,C+1,V-1)):C=0
430 NEXT V
440 NEXT Z
450 MM=X-1
460 GOSUB 610
470 C=1
480 FOR VV=1 TO LEN(IP$)
490 IF C>MM THEN GOTO 510
500 IF VV=PS(C) THEN CD$=CD$+RP$(C):VV=VV+PE(C)-PS(C):C=C+1:GOTO 530
510 CC$=MID$(IP$,VV,1)
520 CD$=CD$+CC$
530 NEXT VV
540 IP$=CD$
550 PRINT#2,IP$
560 CC$="":CD$=""
570 IF QP=-1 THEN GOTO 590
580 GOTO 280
590 CLS:PRINT "PROGRAM HAS BEEN CONVERTED."
600 END
610 'SBR FOR NUMBER CONVERSION
620 FOR K=1 TO MM
630 J=PN(K)
640 IF J<0 THEN J=0
650 IF J>511 THEN J=511
660 Y=INT(J/32)
670 X=J/32
680 Z=X-Y
690 Y=Y+1
700 Z=(Z*32)+1
710 IF AA<80 THEN Z=Z ELSE Z=Z*2
720 YY=(Y-1)*1.5
730 ZZ=(Z-1)*1.25
740 IF YY-(INT(YY))<0.5 THEN YY=INT(YY) ELSE YY=INT(YY)+1
750 IF ZZ-(INT(ZZ))<0.5 THEN ZZ=INT(ZZ) ELSE ZZ=INT(ZZ)+1
760 XX$=STR$(ZZ):XX$=RIGHT$(XX$,LEN(XX$)-1)
770 YY$=STR$(YY):YY$=RIGHT$(YY$,LEN(YY$)-1)
780 RP$(K)="LOCATE "+XX$+","+YY$
790 RP$(K)=RP$(K)+":PRINT "
800 NEXT K
810 RETURN
820 'ERROR TRAP SUBROUTINE
830 IF ERNO=14 THEN PRINT"STRING TOO LONG!":PRINT "SHORTEN THIS LINE...":PRINT CD$:CLOSE#1:CLOSE#2:KILL B$:END
840 IF ERNO=26 THEN PRINT "CAN NOT FIND THAT FILE!...TRY AGAIN!":FOR K=1 TO 1000:NEXT K:RUN
850 CLS:PRINT "ERROR NUMBER...";ERNO;" IN LINE NUMBER...";ERLIN:END
1 'BASE CONVERTER
2 'BY GEORGE QUELLHORST
3 'COPYRIGHT (C) 1992
4 'BY FALSOFT, INC.
5 'RAINBOW MAGAZINE
10 ' CONVERSIONS. By: George Quellhorst. Latest update: 12/05/1990
20 POKE65497,.:RGB:CLEAR2000:PALETTE0,56:PALETTE2,63:PALETTE3,8:PALETTE8,8:PALETTE9,32:WIDTH80:CLS1:POKE140,180:EXEC43350:S$=CHR$(252):POKE63372,65:POKE65434,56:POKE&HF80F,0:POKE&HF84F,0:POKE&HF89C,0:POKE41598,255:ONBRKGOTO550
30 LOCATE3,1:ATTR0,0:PRINT"C O N V E R S I O N S  -  BY: GEORGE QUELLHORST  -  C O N V E R S I O N S";:LOCATE3,2:PRINTSTRING$(73,45)
40 LOCATE10,4:ATTR1,0:PRINT"UP/ARROW POINTS TO INPUT BASE IN EFFECT AFTER PRESSING ENTER";:LOCATE6,6:PRINT"H E X A D E C I M A L":LOCATE38,6:PRINT"D E C I M A L":LOCATE63,6:PRINT"B I N A R Y"
50 LOCATE3,12:ATTR1,0:PRINT"PRESS ENTER ONLY TO SWITCH INPUT BASE";:LOCATE55,12:PRINT"RETURN VALUES:";:X(1)=15:X(2)=43:X(3)=67:Y=7:LOCATE15,Y:ATTR3,3:PRINT" ^ ";:ATTR0,0:P=1
60 LOCATE42,14:PRINT"DECIMAL....:";:LOCATE42,17:PRINT"BINARY.....:";:LOCATE42,20:PRINT"HEXADECIMAL:";:LOCATE3,22:PRINTSTRING$(73,45);:LOCATE25,23:ATTR1,0:PRINT"PRESS SHIFT / BREAK TO ESCAPE";
70 LOCATE13,9:ATTR0,0:PRINT"USE LEFT AND RIGHT ARROWS TO CHOOSE DESIRED INPUT BASE";:FORT=12TO21:LOCATE40,T:PRINTS$;:NEXTT:LOCATE3,11:PRINTSTRING$(73,45);
80 ' Input mode select.
90 LOCATE28,10:ATTR1,1,B:GOSUB540
100 P$=INKEY$:IFP$=""THEN100
110 IFPEEK(344)=247THENEXEC:P=P+1:IFP>3THENP=1
120 IFPEEK(343)=247THENEXEC:P=P-1:IFP<1THENP=3
130 FORT=1TO3:LOCATEX(T),Y:ATTR2,0:PRINT"  ";:NEXT:LOCATEX(P),Y:ATTR3,3:PRINT" ^";:ATTR1,0
140 IFP$=CHR$(13)THENEXEC:LOCATEX(P),Y:ATTR3,3:PRINT" ^";:LOCATE28,10:ATTR0,0:GOSUB540:GOTO150ELSE100
150 ON P GOSUB 190,240,280
160 IFP=1THENGOSUB430:D=A:GOSUB450:GOTO170ELSEIFP=2THENA=D:GOSUB400:GOSUB450:GOTO170ELSEIFP=3THENGOSUB350:A=D:GOSUB400
170 GOSUB520:GOSUB530:GOTO150
180 ' Hexidecimal input routine.
190 LOCATE5,15:PRINT"PLEASE INPUT HEXADECIMAL NUMBER";:LOCATE4,17:PRINT"MAXIMUM FFFFF - DO NOT INCLUDE &H";
200 LOCATE40,19:PRINTS$;:LOCATE17,19:LINEINPUTH$:EXEC:LOCATE40,19:PRINTS$;:IFH$=""THEN510ELSEIFLEN(H$)>5THENGOSUB530:LOCATE17,19:PRINT" ":GOTO200
210 FORT=1TOLEN(H$):Z$=MID$(H$,T,1):N=INSTR(1,"1234567890ABCDEF",Z$):IFN=0THENGOSUB530:LOCATE17,19:PRINT" ":GOTO200ELSENEXTT
220 HE$=H$:H$="&H"+H$:RETURN
230 ' Decimal input routine.
240 LOCATE6,15:PRINT"PLEASE INPUT DECIMAL NUMBER";:LOCATE12,17:PRINT"MAXIMUM 1048575";
250 LOCATE40,19:PRINTS$;:LOCATE17,19:LINEINPUTD$:EXEC:LOCATE40,19:PRINTS$;:IFD$=""THEN510ELSE D=VAL(D$):IFD>1048575THENGOSUB530:LOCATE17,19:PRINT" ":GOTO250
260 RETURN
270 ' Binary input routine.
280 LOCATE7,14:PRINT"PLEASE INPUT BINARY NUMBER";:LOCATE2,15:PRINT"PERIODS AND LEADING ZEROS NOT NEEDED";:LOCATE4,17:PRINT"1111.1111.1111.1111.1111 MAXIMUM";
290 LOCATE40,19:PRINTS$;:LOCATE9,19:LINEINPUTB$:EXEC:LOCATE40,19:PRINTS$;:IFB$=""THEN510ELSEIFLEN(A$)>24THENGOSUB530:LOCATE9,19:PRINT" ":GOTO290
300 FORT=1TOLEN(B$):A$=MID$(B$,T,1):IFA$="0" ORA$="1" ORA$="."THENNEXTT ELSEGOSUB530:LOCATE9,19:PRINT" ":GOTO290
310 N=INSTR(1,B$,"."):IFN=0THEN320ELSEB$=LEFT$(B$,N-1)+RIGHT$(B$,LEN(B$)-N):GOTO310
320 IFLEN(B$)>20THENGOSUB530:LOCATE9,19:PRINT" ":GOTO290
330 B$=STRING$(20-LEN(B$),"0")+B$:RETURN
340 ' Binary to Decimal.
350 D=0:FORT=20TO1STEP-1:A=VAL(MID$(B$,21-T,1)):D=D+A*INT(2^(T-1)):NEXT
360 A$="":N=INSTR(1,B$,"1")-1:B$=RIGHT$(B$,LEN(B$)-N)
370 IFINT(LEN(B$)/4)<>LEN(B$)/4 THENB$="0"+B$:GOTO370
380 FORT=1TOLEN(B$)STEP4:A$=A$+MID$(B$,T,4)+".":NEXT:B$=LEFT$(A$,LEN(A$)-1):RETURN
390 ' Decimal to Hexidecimal.
400 K=INT(D/256):V=D-(256*K):J$=HEX$(K):IFV=0THENL$="00"ELSEL$=HEX$(V)
410 HE$=J$+L$:RETURN
420 ' Hexidecimal to Decimal. Input &HH$ / Output A
430 A=VAL(H$):RETURN
440 ' Decimal to Binary.
450 IFD>65535THENL=19ELSEIFD>4095THENL=15ELSEIFD>255THENL=11ELSEIFD>15THENL=7ELSEL=3
460 A$="":B$="":FORT=L TO 0 STEP-1:B=INT(D/INT(2^T))
470 IFB=>1 THENA$=A$+"1":D=D-INT(2^T) ELSEA$=A$+"0"
480 NEXTT:L=LEN(A$)
490 FORT=1TO L STEP4:B$=B$+MID$(A$,T,4)+".":NEXT:B$=LEFT$(B$,LEN(B$)-1):RETURN
500 ' Miscellaneous gosubs.
510 Z$=STRING$(36,32):LOCATE1,14:PRINTZ$;:LOCATE1,15:PRINTZ$;:LOCATE1,17:PRINTZ$;:LOCATE54,14:PRINT" ":LOCATE54,17:PRINT" ":LOCATE54,20:PRINT" ":GOTO90
520 LOCATE4,19:PRINT" ":LOCATE40,19:PRINTS$;:LOCATE54,14:PRINTA:LOCATE55,17:PRINTB$:LOCATE55,20:PRINTHE$:RETURN
530 POKE140,180:FORZ=1TO25:EXEC:NEXTZ:RETURN
540 PRINT" PRESS ENTER TO ACTIVATE";:RETURN
550 CLS1:POKE41598,3:POKE63372,11:POKE65496,0:ATTR0,0:STOP
